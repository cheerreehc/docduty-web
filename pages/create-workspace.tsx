import { useState } from 'react'
import { useRouter } from 'next/router'
import Header from '@/components/Header'
import { useUser } from '@/contexts/UserContext'
import { createClient } from '@/utils/supabase/client'

export default function CreateWorkspacePage() {
  const router = useRouter()
  const { session, profile } = useUser()
  const supabase = createClient()

  const [name, setName] = useState('')
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')

  const handleCreate = async () => {
      setError('')
      if (!session?.user || !profile) {
        setError('‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ login')
        return
      }
      if (!name.trim()) {
        setError('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠ workspace')
        return
      }
      setLoading(true);

    try {
      console.log('--- STARTING TEST: INSERT INTO WORKSPACES ONLY ---');
        const { data: workspace, error: wsError } = await supabase
        .from('workspaces')
        .insert({
          name: name.trim()
        })
        .select()
        .single()

      console.log('Workspace Insert Result:', { workspace, wsError });

      if (wsError) {
        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏î Error ‡πÉ‡∏´‡πâ‡πÇ‡∏¢‡∏ô Error ‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡πÉ‡∏´‡πâ catch ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£
        throw wsError;
      }

      // ‡∏ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô Alert ‡πÅ‡∏•‡∏∞‡∏î‡∏π Log
      alert('‚úÖ SUCCESS: Workspace created successfully! Please check the database and console.');
      console.log('--- ‚úÖ TEST SUCCEEDED ---');

      // ‚úÖ 1. ‡∏™‡∏£‡πâ‡∏≤‡∏á workspace ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏∏ created_by
      // const { data: workspace, error: wsError } = await supabase
      
      //   .from('workspaces')
      //   .insert({
      //     name: name.trim()
      //     // created_by: session?.user.id
      //   })
      //   .select()
      //   .single()
    
      //   console.log('üë§ created_by', session?.user.id)
      // if (wsError || !workspace) {
      //   throw wsError ?? new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á workspace ‡πÑ‡∏î‡πâ')
      // }

      // ‚úÖ 2. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô owner
      // const { error: memberError } = await supabase.from('members').insert({
      //   workspace_id: workspace.id,
      //   user_id: session.user.id,
      //   profile_user_id: profile.id,
      //   email: profile.email,
      //   role: 'owner',
      //   status: 'active',
      // })

      // if (memberError) {
      //   throw new Error('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ' + memberError.message)
      // }

      // // ‚úÖ ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‚Üí redirect
      // router.push('/dashboard')
    } catch (err: any) {
      console.error('--- ‚ùå TEST FAILED ---', err);
      setError(err?.message ?? '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen bg-[#F7FCFD]">
      <Header />
       <div className="max-w-4xl mx-auto pt-32 px-4 pb-12">
        <div className="bg-white rounded-xl shadow-lg p-6 md:p-8 space-y-6">
        <h1 className="text-2xl font-bold mb-4">üöÄ ‡∏™‡∏£‡πâ‡∏≤‡∏á Workspace ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</h1>

        <label className="block mb-2 text-lg font-medium">‡∏ä‡∏∑‡πà‡∏≠ Workspace</label>
        <input
          type="text"
          className="w-full border border-gray-300 rounded px-3 py-2"
          value={name}
          onChange={(e) => setName(e.target.value)}
          placeholder="‡πÄ‡∏ä‡πà‡∏ô MED DOCDUTY"
        />

        {error && <p className="text-red-600 mt-2 text-sm">{error}</p>}

        <button
          onClick={handleCreate}
          disabled={loading}
          className="mt-4 bg-[#008191] text-white px-4 py-2 rounded hover:bg-blue-700 transition"
        >
          {loading ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á...' : '‡∏™‡∏£‡πâ‡∏≤‡∏á Workspace'}
        </button>
      </div>
    </div>
    </div>
  )
}
